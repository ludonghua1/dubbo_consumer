<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yitian.mybatis.mapper.OrdersMapper" >
    <resultMap id="BaseResultMap" type="com.yitian.mybatis.model.Orders" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="money" property="money" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
    </resultMap>

    <resultMap id="ordersVOMap" type="com.yitian.mybatis.vo.OrdersVo" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="money" property="money" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    </resultMap>


    <sql id="Base_Column_List" >
    id, money, create_time, status, user_id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from orders
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.yitian.mybatis.model.Orders" >
    insert into orders (id, money, create_time, 
      status, user_id)
    values (#{id,jdbcType=INTEGER}, #{money,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.yitian.mybatis.model.Orders" >
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="money != null" >
                money,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="money != null" >
                #{money,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yitian.mybatis.model.Orders" >
        update orders
        <set >
            <if test="money != null" >
                money = #{money,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yitian.mybatis.model.Orders" >
    update orders
    set money = #{money,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findOrdersVo" resultMap="ordersVOMap">
    select orders.*,sys_user.login_name from orders,sys_user where orders.user_id=sys_user.id
    </select>

    <select id="findOrdersUser" resultMap="ordersUserMap">
          select orders.*,sys_user.login_name from orders,sys_user where orders.user_id=sys_user.id
    </select>

    <resultMap id="ordersUserMap" type="orders">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="money" property="money" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <!--一对一，使用association标签-->
        <association property="user" javaType="sysUser">
            <result column="user_id" property="id"/>
            <result column="login_name" property="loginName"/>
        </association>
    </resultMap>
    <!--多对多，使用collection标签-->
    <select id="findOrdersById" parameterType="int" resultMap="ordersItemsMap">
            select orders.*,items.id as items_id,items.price,items.img_url,items.count,items.items_name from
            orders,orders_items_relation,items where orders.id=#{id} and orders.id=orders_id and
            orders_items_relation.items_id=items.id
    </select>
    <resultMap id="ordersItemsMap" type="orders">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="money" property="money" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <collection property="itemsList" ofType="items">
            <result column="items_id" property="id"/>
            <result column="price" property="price" jdbcType="VARCHAR" />
            <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
            <result column="count" property="count" jdbcType="INTEGER" />
            <result column="items_name" property="itemsName" jdbcType="VARCHAR" />
        </collection>
    </resultMap>

    <select id="findOrdersByName" parameterType="int" resultMap="findOrdersBy">
        SELECT orders.*,sys_user.login_name,items.id AS items_id,items.price,items.img_url,items.count,items.items_name FROM
        orders,sys_user,orders_items_relation,items WHERE orders.user_id=sys_user.id AND orders.id=#{id} AND orders.id=orders_id AND
        orders_items_relation.items_id=items.id
    </select>

    <resultMap id="findOrdersBy" type="orders">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="money" property="money" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <!--一对一，使用association标签-->
        <association property="user" javaType="sysUser">
            <result column="user_id" property="id"/>
            <result column="login_name" property="loginName"/>
        </association>
        <collection property="itemsList" ofType="items">
            <result column="items_id" property="id"/>
            <result column="price" property="price" jdbcType="VARCHAR" />
            <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
            <result column="count" property="count" jdbcType="INTEGER" />
            <result column="items_name" property="itemsName" jdbcType="VARCHAR" />
        </collection>
    </resultMap>

    <!--懒加载 一对一-->
    <select id="findOrdersAndUser" parameterType="int" resultMap="lazyMap">
          select * from orders where id=#{id}
        </select>
    <resultMap id="lazyMap" type="orders">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="money" property="money" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <!--配置懒加载，需要用的时候在查询    select属性指定懒加载触发时，mybatis会自动执行的sql位置-->
        <association property="user" javaType="sysUser" column="user_id" select="com.yitian.mybatis.mapper.SysUserMapper.selectByPrimaryKey">
            <id column="user_id" property="id" jdbcType="INTEGER" />
            <result column="login_name" property="loginName" jdbcType="VARCHAR" />
            <result column="password" property="password" jdbcType="VARCHAR" />
        </association>
    </resultMap>
</mapper>